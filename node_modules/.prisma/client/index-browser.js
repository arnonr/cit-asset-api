
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 5.0.0
 * Query Engine version: 6b0aef69b7cdfc787f822ecd7cdc76d5f1991584
 */
Prisma.prismaVersion = {
  client: "5.0.0",
  engine: "6b0aef69b7cdfc787f822ecd7cdc76d5f1991584"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.News_typeScalarFieldEnum = {
  id: 'id',
  name_th: 'name_th',
  name_en: 'name_en',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  news_type_id: 'news_type_id',
  title_th: 'title_th',
  title_en: 'title_en',
  detail_th: 'detail_th',
  detail_en: 'detail_en',
  news_file: 'news_file',
  is_active: 'is_active',
  is_publish: 'is_publish',
  count_views: 'count_views',
  created_news: 'created_news',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.BannerScalarFieldEnum = {
  id: 'id',
  title_th: 'title_th',
  title_en: 'title_en',
  banner_file: 'banner_file',
  banner_url: 'banner_url',
  is_active: 'is_active',
  is_publish: 'is_publish',
  count_views: 'count_views',
  created_banner: 'created_banner',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.AboutScalarFieldEnum = {
  id: 'id',
  title_th: 'title_th',
  title_en: 'title_en',
  detail_th: 'detail_th',
  detail_en: 'detail_en',
  is_active: 'is_active',
  is_publish: 'is_publish',
  count_views: 'count_views',
  created_about: 'created_about',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  title_th: 'title_th',
  title_en: 'title_en',
  detail_th: 'detail_th',
  detail_en: 'detail_en',
  is_active: 'is_active',
  is_publish: 'is_publish',
  count_views: 'count_views',
  created_contact: 'created_contact',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name_th: 'name_th',
  name_en: 'name_en',
  level: 'level',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  department_id: 'department_id',
  prefix_th: 'prefix_th',
  prefix_en: 'prefix_en',
  firstname_th: 'firstname_th',
  firstname_en: 'firstname_en',
  surname_th: 'surname_th',
  surname_en: 'surname_en',
  position_th: 'position_th',
  position_en: 'position_en',
  position_level_th: 'position_level_th',
  position_level_en: 'position_level_en',
  phone: 'phone',
  email: 'email',
  level: 'level',
  team_file: 'team_file',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.News_galleryScalarFieldEnum = {
  id: 'id',
  news_id: 'news_id',
  secret_key: 'secret_key',
  news_gallery_file: 'news_gallery_file',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Equipment_departmentScalarFieldEnum = {
  id: 'id',
  name_th: 'name_th',
  name_en: 'name_en',
  name_short: 'name_short',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Equipment_categoryScalarFieldEnum = {
  id: 'id',
  name_th: 'name_th',
  name_en: 'name_en',
  name_short: 'name_short',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.EquipmentScalarFieldEnum = {
  id: 'id',
  equipment_category_id: 'equipment_category_id',
  equipment_department_id: 'equipment_department_id',
  title_th: 'title_th',
  title_en: 'title_en',
  detail_th: 'detail_th',
  detail_en: 'detail_en',
  equipment_file: 'equipment_file',
  rate_file: 'rate_file',
  is_active: 'is_active',
  is_publish: 'is_publish',
  count_views: 'count_views',
  created_equipment: 'created_equipment',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Equipment_galleryScalarFieldEnum = {
  id: 'id',
  equipment_id: 'equipment_id',
  secret_key: 'secret_key',
  equipment_gallery_file: 'equipment_gallery_file',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Equipment_methodScalarFieldEnum = {
  id: 'id',
  name_th: 'name_th',
  name_en: 'name_en',
  name_short: 'name_short',
  unit_th: 'unit_th',
  unit_en: 'unit_en',
  price: 'price',
  is_fixrate: 'is_fixrate',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at',
  equipment_id: 'equipment_id'
};

exports.Prisma.GroupScalarFieldEnum = {
  id: 'id',
  title_th: 'title_th',
  title_en: 'title_en',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  group_id: 'group_id',
  email: 'email',
  password: 'password',
  status: 'status',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  prefix: 'prefix',
  firstname: 'firstname',
  surname: 'surname',
  member_status: 'member_status',
  organization: 'organization',
  contact_address: 'contact_address',
  phone: 'phone',
  email: 'email',
  invoice_address: 'invoice_address',
  tax_id: 'tax_id',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Equipment_bookingScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  equipment_id: 'equipment_id',
  booking_date: 'booking_date',
  period_time: 'period_time',
  member_status: 'member_status',
  example: 'example',
  prefix: 'prefix',
  firstname: 'firstname',
  surname: 'surname',
  organization: 'organization',
  contact_address: 'contact_address',
  phone: 'phone',
  email: 'email',
  invoice_address: 'invoice_address',
  tax_id: 'tax_id',
  price: 'price',
  reject_comment: 'reject_comment',
  confirmed_date: 'confirmed_date',
  status_id: 'status_id',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.Equipment_booking_methodScalarFieldEnum = {
  id: 'id',
  equipment_booking_id: 'equipment_booking_id',
  equipment_method_id: 'equipment_method_id',
  quantity: 'quantity',
  price: 'price',
  is_active: 'is_active',
  is_publish: 'is_publish',
  created_at: 'created_at',
  created_by: 'created_by',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  deleted_at: 'deleted_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  news_type: 'news_type',
  news: 'news',
  banner: 'banner',
  about: 'about',
  contact: 'contact',
  department: 'department',
  team: 'team',
  news_gallery: 'news_gallery',
  equipment_department: 'equipment_department',
  equipment_category: 'equipment_category',
  equipment: 'equipment',
  equipment_gallery: 'equipment_gallery',
  equipment_method: 'equipment_method',
  group: 'group',
  user: 'user',
  profile: 'profile',
  equipment_booking: 'equipment_booking',
  equipment_booking_method: 'equipment_booking_method'
};

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
